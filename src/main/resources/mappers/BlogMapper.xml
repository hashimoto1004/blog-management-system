<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.blog.repository.BlogRepository">
    <resultMap id="BlogResultMap" type="com.example.blog.entity.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="deletedAt" column="deleted_at"/>
        <association property="user" column="user_id" javaType="com.example.blog.entity.User">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
            <result property="email" column="email"/>
        </association>
        <association property="category" column="category_id" javaType="com.example.blog.entity.Category">
            <id property="id" column="category_id"/>
            <result property="nameJa" column="name_ja"/>
        </association>
    </resultMap>

    <select id="findAll" resultMap="BlogResultMap">
        SELECT b.*, u.id as user_id, u.username, u.email, c.id as category_id, c.name_ja
        FROM blogs b
        JOIN users u ON b.user_id = u.id
        LEFT JOIN categories c ON b.category_id = c.id
        WHERE b.deleted_at IS NULL
    </select>

    <select id="findById" resultMap="BlogResultMap" parameterType="int">
        SELECT b.*, u.id as user_id, u.username, u.email, c.id as category_id, c.name_ja
        FROM blogs b
        JOIN users u ON b.user_id = u.id
        LEFT JOIN categories c ON b.category_id = c.id
        WHERE b.id = #{id} AND b.deleted_at IS NULL
    </select>

    <insert id="save" parameterType="com.example.blog.entity.Blog" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO blogs (title, content, user_id, category_id) 
        VALUES (#{title}, #{content}, #{user.id}, #{category.id})
    </insert>

    <update id="update" parameterType="com.example.blog.entity.Blog">
        UPDATE blogs 
        SET title = #{title}, content = #{content}, updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <update id="delete" parameterType="int">
        UPDATE blogs 
        SET deleted_at = NOW() 
        WHERE id = #{id}
    </update>

    <select id="countByTitle" resultType="int" parameterType="java.lang.String">
        SELECT COUNT(*) FROM blogs WHERE title = #{title} AND deleted_at IS NULL
    </select>

    <select id="countByTitleAndNotId" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM blogs
        WHERE title = #{title} AND id != #{id} AND deleted_at IS NULL
    </select>

</mapper>
